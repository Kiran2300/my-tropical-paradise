"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = renderToSheetList;

var _fastLoops = require("fast-loops");

var _felaUtils = require("fela-utils");

var _getRehydrationIndex = _interopRequireDefault(require("./getRehydrationIndex"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function renderToSheetList(renderer) {
  var cacheCluster = (0, _felaUtils.clusterCache)(renderer.cache, renderer.ruleOrder);
  var rehydrationIndex = (0, _getRehydrationIndex["default"])(renderer);
  var sheetList = (0, _fastLoops.objectReduce)(_felaUtils.sheetMap, function (list, type, key) {
    if (cacheCluster[key].length > 0) {
      list.push({
        css: cacheCluster[key],
        rehydration: rehydrationIndex,
        attributes: renderer.styleNodeAttributes,
        type: type
      });
    }

    return list;
  }, []);
  var support = (0, _felaUtils.cssifySupportRules)(cacheCluster.supportRules);

  if (support) {
    sheetList.push({
      css: support,
      type: _felaUtils.RULE_TYPE,
      rehydration: rehydrationIndex,
      attributes: renderer.styleNodeAttributes,
      support: true
    });
  }

  var mediaKeys = Object.keys(_objectSpread(_objectSpread({}, cacheCluster.supportMediaRules), cacheCluster.mediaRules)).sort(renderer.sortMediaQuery);
  return (0, _fastLoops.arrayReduce)(mediaKeys, function (list, media) {
    // basic media query rules
    if (cacheCluster.mediaRules[media] && cacheCluster.mediaRules[media].length > 0) {
      list.push({
        css: cacheCluster.mediaRules[media],
        type: _felaUtils.RULE_TYPE,
        rehydration: rehydrationIndex,
        attributes: renderer.styleNodeAttributes,
        media: media
      });
    } // support media rules


    if (cacheCluster.supportMediaRules[media]) {
      var mediaSupport = (0, _felaUtils.cssifySupportRules)(cacheCluster.supportMediaRules[media]);

      if (mediaSupport.length > 0) {
        list.push({
          css: mediaSupport,
          type: _felaUtils.RULE_TYPE,
          rehydration: rehydrationIndex,
          attributes: renderer.styleNodeAttributes,
          support: true,
          media: media
        });
      }
    }

    return list;
  }, sheetList);
}