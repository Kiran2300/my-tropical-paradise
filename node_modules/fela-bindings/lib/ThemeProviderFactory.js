"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = ThemeProviderFactory;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function ThemeProviderFactory(ThemeContext, createElement, renderChildren) {
  return function ThemeProvider(_ref) {
    var _ref$theme = _ref.theme,
        theme = _ref$theme === void 0 ? {} : _ref$theme,
        _ref$overwrite = _ref.overwrite,
        overwrite = _ref$overwrite === void 0 ? false : _ref$overwrite,
        children = _ref.children;
    return createElement(ThemeContext.Consumer, null, function (previousTheme) {
      return createElement(ThemeContext.Provider, {
        value: !overwrite && previousTheme ? _objectSpread(_objectSpread({}, previousTheme), theme) : theme
      }, renderChildren(children));
    });
  };
}